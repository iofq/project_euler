#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#input: tuple of 2 numbers, n being last term and m the term before that
#output: tuple of 2 numbers, n being the sum and m being previous n
def f(t):
    m = t[0]
    n = t[1]
    return (n, m + n)

def iter():
    
    # init with 1,2
    next = (1, 2)
    sum = 0

    while next[1] <= 4000000:
        if next[1] % 2 == 0:
            sum += next[1]
        next = f(next)

    return sum

